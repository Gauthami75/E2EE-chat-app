{"ast":null,"code":"var _jsxFileName = \"/home/saumya/Projects/Assignment/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport ChatArea from \"./Components/ChatArea/ChatArea\";\nimport InfoArea from \"./Components/InfoArea/InfoArea\";\nimport UtilsArea from \"./Components/UtilsArea/UtilsArea\";\nimport JoinRoom from \"./Components/JoinRoom/JoinRoom\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport socket from \"./Utils/socket\";\nimport \"./CSS/App.css\";\nimport { info } from \"console\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ECDH\n} = require(\"./Utils/ECDH\");\n\nfunction App() {\n  _s();\n\n  const ecdh = useRef(new ECDH()); // const secretKey =  useRef(\"\")\n  // const friendPublicKey =  useRef(\"\")\n  // const friendOnline = useRef(false)\n\n  const [info, setInfo] = useState([\"\", \"\", false]);\n  const [status, setStatus] = useState([]); // const addStatus = (content)=>{\n  //     setStatus((STATUS)=>[\n  //         ...STATUS, content\n  //     ]) \n  // }\n\n  socket.on(\"NEW_CONNECTION\", () => {\n    console.log(\"NEW CONNECTION\");\n    socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey()); // addStatus(`Sent your public Key`)\n    // addStatus(`NEW USER JOINED`)\n  });\n  socket.on(\"ROOM_JOINED\", room => {\n    console.log(\"ROOM_JOINED\");\n    socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey()); // addStatus(`SUCCESSFULLY JOINED : ${room}`)\n    // addStatus(`Sent your public Key`)\n  });\n  socket.on(\"PUBLIC_KEY\", publicKey => {\n    console.log(\"PUBLIC KEY\");\n    setInfo([publicKey, secretKey, true]); // friendPublicKey.current = publicKey\n    // secretKey.current = ecdh.current.getSecretKey(publicKey)\n    // friendOnline.current = true\n\n    console.log(`Secret ${secretKey} Public ${friendPublicKey}`); // addStatus(`Public Key Received : ${publicKey}`)\n  });\n  socket.on(\"USER_DISCONNECTED\", () => {\n    console.log(\"USER DISCONNCTED\");\n    setInfo([\"\", \"\", false]); // friendPublicKey.current = \"\"\n    // secretKey.current = \"\"\n    // friendOnline.current = false\n    // addStatus(`USER DISCONNECTED`)\n  });\n  socket.on(\"ROOM_FULL\", room => {\n    console.log(\"ROOM FULL\"); // addStatus(`${room} is FULL!! Please Try another Room`)\n  });\n  socket.on('INTRUSION_ATTEMPT', room => {\n    console.log(\"INTRUSION ATTEMPTED\"); // addStatus(`Intruder tried to join`)\n  }); // On Mounting\n\n  useEffect(() => {}, []); //   socket.on('PUBLIC_KEY', (room)=>{\n  //     addStatus(`NEW USER JOINED`)\n  // })\n\n  const joinRoom = roomName => {\n    // console.log(\"Room Name :\" + roomName)\n    socket.emit(\"JOIN\", roomName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: /*#__PURE__*/_jsxDEV(ChatArea, {\n        ecdh: ecdh.current,\n        friendOnline: info[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(JoinRoom, {\n        joinRoom: event => joinRoom(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoArea, {\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UtilsArea, {\n        ecdh: ecdh.current,\n        secretKey: info[1],\n        friendPublicKey: info[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rzciF0vlf9Yr/PhRFEIHldyBpTw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/saumya/Projects/Assignment/client/src/App.js"],"names":["ChatArea","InfoArea","UtilsArea","JoinRoom","React","useRef","useEffect","useState","socket","info","ECDH","require","App","ecdh","setInfo","status","setStatus","on","console","log","emit","current","getPublicKey","room","publicKey","secretKey","friendPublicKey","joinRoom","roomName","event"],"mappings":"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","sourcesContent":["import ChatArea from \"./Components/ChatArea/ChatArea\";\nimport InfoArea from \"./Components/InfoArea/InfoArea\";\nimport UtilsArea from \"./Components/UtilsArea/UtilsArea\";\nimport JoinRoom from \"./Components/JoinRoom/JoinRoom\";\nimport React, {useRef, useEffect, useState} from 'react';\nimport socket from \"./Utils/socket\";\nimport \"./CSS/App.css\";\nimport { info } from \"console\";\n\nconst { ECDH } = require(\"./Utils/ECDH\");\n\nfunction App() {\n\n  const ecdh = useRef(new ECDH());\n\n  // const secretKey =  useRef(\"\")\n  // const friendPublicKey =  useRef(\"\")\n  // const friendOnline = useRef(false)\n\n  const [info, setInfo] = useState([\"\", \"\", false])\n\n  const [status, setStatus] = useState([])\n\n  // const addStatus = (content)=>{\n  //     setStatus((STATUS)=>[\n  //         ...STATUS, content\n  //     ]) \n  // }\n\n  socket.on(\"NEW_CONNECTION\", ()=>{\n    console.log(\"NEW CONNECTION\")\n    socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n    // addStatus(`Sent your public Key`)\n    // addStatus(`NEW USER JOINED`)\n  })\n\n  socket.on(\"ROOM_JOINED\", (room)=>{\n    console.log(\"ROOM_JOINED\")\n    socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n    // addStatus(`SUCCESSFULLY JOINED : ${room}`)\n    // addStatus(`Sent your public Key`)\n  })\n\n  socket.on(\"PUBLIC_KEY\", (publicKey)=>{\n    console.log(\"PUBLIC KEY\")\n    setInfo([publicKey, secretKey, true])\n    // friendPublicKey.current = publicKey\n    // secretKey.current = ecdh.current.getSecretKey(publicKey)\n    // friendOnline.current = true\n    console.log(`Secret ${secretKey} Public ${friendPublicKey}`)\n    // addStatus(`Public Key Received : ${publicKey}`)\n  })\n\n  socket.on(\"USER_DISCONNECTED\", ()=>{\n    console.log(\"USER DISCONNCTED\")\n    setInfo([\"\", \"\", false])\n    // friendPublicKey.current = \"\"\n    // secretKey.current = \"\"\n    // friendOnline.current = false\n    \n    // addStatus(`USER DISCONNECTED`)\n  })\n\n  socket.on(\"ROOM_FULL\", (room)=>{\n      console.log(\"ROOM FULL\")\n      // addStatus(`${room} is FULL!! Please Try another Room`)\n  })\n\n  socket.on('INTRUSION_ATTEMPT', (room)=>{\n      console.log(\"INTRUSION ATTEMPTED\")\n      // addStatus(`Intruder tried to join`)\n  })\n\n  // On Mounting\n  useEffect(()=>{\n    \n  }, [])\n\n//   socket.on('PUBLIC_KEY', (room)=>{\n//     addStatus(`NEW USER JOINED`)\n// })\n\n  const joinRoom  = (roomName)=>{\n    // console.log(\"Room Name :\" + roomName)\n    socket.emit(\"JOIN\", roomName)\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"left\">\n        <ChatArea ecdh={ecdh.current} friendOnline={info[2]}/>\n      </div>  \n      <div className=\"right\">\n        <JoinRoom joinRoom={(event) => joinRoom(event)}/>\n        <InfoArea status={status}/>\n        <UtilsArea ecdh={ecdh.current} secretKey={info[1]} friendPublicKey={info[0]}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}