{"ast":null,"code":"const crypo = require(\"crypto\");\n\nexport default function ECDH() {\n  this.alice = crypo.createECDH(\"secp256k1\");\n  this.alice.generateKeys();\n\n  const getPublicKey = () => {\n    return this.alice.getPublicKey().toString('base64');\n  };\n\n  const getPrivateKey = () => {\n    return this.alice.getPrivateKey().toString('base64');\n  };\n\n  const getSecretKey = bob_publicKey => {\n    return this.alice.computeSecret(bob_publicKey, 'base64', 'hex');\n  };\n}\n_c = ECDH;\n\nvar _c;\n\n$RefreshReg$(_c, \"ECDH\");","map":{"version":3,"sources":["/home/saumya/Assignment/client/src/Utils/ECDH.js"],"names":["crypo","require","ECDH","alice","createECDH","generateKeys","getPublicKey","toString","getPrivateKey","getSecretKey","bob_publicKey","computeSecret"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,QAAD,CAArB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAE3B,OAAKC,KAAL,GAAaH,KAAK,CAACI,UAAN,CAAiB,WAAjB,CAAb;AAEA,OAAKD,KAAL,CAAWE,YAAX;;AAEA,QAAMC,YAAY,GAAG,MAAI;AACrB,WAAO,KAAKH,KAAL,CAAWG,YAAX,GAA0BC,QAA1B,CAAmC,QAAnC,CAAP;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAI;AACtB,WAAO,KAAKL,KAAL,CAAWK,aAAX,GAA2BD,QAA3B,CAAoC,QAApC,CAAP;AACH,GAFD;;AAIA,QAAME,YAAY,GAAIC,aAAD,IAAiB;AAClC,WAAO,KAAKP,KAAL,CAAWQ,aAAX,CAAyBD,aAAzB,EAAwC,QAAxC,EAAkD,KAAlD,CAAP;AACH,GAFD;AAIH;KAlBuBR,I","sourcesContent":["const crypo = require(\"crypto\")\n\nexport default function ECDH() {\n    \n    this.alice = crypo.createECDH(\"secp256k1\")\n    \n    this.alice.generateKeys()\n\n    const getPublicKey = ()=>{\n        return this.alice.getPublicKey().toString('base64')\n    }\n\n    const getPrivateKey = ()=>{\n        return this.alice.getPrivateKey().toString('base64')\n    }\n\n    const getSecretKey = (bob_publicKey)=>{\n        return this.alice.computeSecret(bob_publicKey, 'base64', 'hex')\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}