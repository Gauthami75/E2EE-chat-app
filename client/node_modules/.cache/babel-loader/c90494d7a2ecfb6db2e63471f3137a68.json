{"ast":null,"code":"const crypo = require(\"crypto\");\n\nexport default class ECDH {\n  constructor() {\n    this.getPublicKey = () => {\n      return this.alice.getPublicKey().toString('base64');\n    };\n\n    this.getPrivateKey = () => {\n      return this.alice.getPrivateKey().toString('base64');\n    };\n\n    this.getSecretKey = bob_publicKey => {\n      return this.alice.computeSecret(bob_publicKey, 'base64', 'hex');\n    };\n  }\n\n  ECDH() {\n    alice = crypo.createECDH(\"secp256k1\");\n    alice.generateKeys();\n  }\n\n}","map":{"version":3,"sources":["/home/saumya/Assignment/client/src/Utils/ECDH.js"],"names":["crypo","require","ECDH","getPublicKey","alice","toString","getPrivateKey","getSecretKey","bob_publicKey","computeSecret","createECDH","generateKeys"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,QAAD,CAArB;;AAEA,eAAe,MAAMC,IAAN,CAAU;AAAA;AAAA,SAOrBC,YAPqB,GAON,MAAI;AACf,aAAO,KAAKC,KAAL,CAAWD,YAAX,GAA0BE,QAA1B,CAAmC,QAAnC,CAAP;AACH,KAToB;;AAAA,SAWrBC,aAXqB,GAWL,MAAI;AAChB,aAAO,KAAKF,KAAL,CAAWE,aAAX,GAA2BD,QAA3B,CAAoC,QAApC,CAAP;AACH,KAboB;;AAAA,SAerBE,YAfqB,GAeLC,aAAD,IAAiB;AAC5B,aAAO,KAAKJ,KAAL,CAAWK,aAAX,CAAyBD,aAAzB,EAAwC,QAAxC,EAAkD,KAAlD,CAAP;AACH,KAjBoB;AAAA;;AAErBN,EAAAA,IAAI,GAAE;AACFE,IAAAA,KAAK,GAAGJ,KAAK,CAACU,UAAN,CAAiB,WAAjB,CAAR;AACAN,IAAAA,KAAK,CAACO,YAAN;AACH;;AALoB","sourcesContent":["const crypo = require(\"crypto\")\n\nexport default class ECDH{\n    \n    ECDH(){\n        alice = crypo.createECDH(\"secp256k1\")\n        alice.generateKeys()\n    }\n\n    getPublicKey = ()=>{\n        return this.alice.getPublicKey().toString('base64')\n    }\n\n    getPrivateKey = ()=>{\n        return this.alice.getPrivateKey().toString('base64')\n    }\n\n    getSecretKey = (bob_publicKey)=>{\n        return this.alice.computeSecret(bob_publicKey, 'base64', 'hex')\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}