{"ast":null,"code":"var _jsxFileName = \"/home/saumya/Projects/Assignment/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport ChatArea from \"./Components/ChatArea/ChatArea\";\nimport InfoArea from \"./Components/InfoArea/InfoArea\";\nimport UtilsArea from \"./Components/UtilsArea/UtilsArea\";\nimport JoinRoom from \"./Components/JoinRoom/JoinRoom\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport socket from \"./Utils/socket\";\nimport \"./CSS/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ECDH\n} = require(\"./Utils/ECDH\");\n\nfunction App() {\n  _s();\n\n  console.log(\"Rendering.... APP\");\n  const ecdh = useRef(new ECDH());\n  const [room, setRoom] = useState(socket.id);\n  const [info, setInfo] = useState([\"\", \"\", false]);\n  const [status, setStatus] = useState([]);\n\n  const addStatus = content => {\n    setStatus(STATUS => [...STATUS, content]);\n  }; // On Mounting\n\n\n  useEffect(() => {\n    socket.on(\"NEW_CONNECTION\", () => {\n      socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey());\n      addStatus(`Sent your public Key`);\n      addStatus(`NEW USER JOINED`);\n    });\n    socket.on(\"ROOM_JOINED\", room => {\n      addStatus(`SUCCESSFULLY JOINED : ${room}`);\n      addStatus(`Sent your public Key : ${ecdh.current.getPublicKey()}`);\n      socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey());\n    });\n    socket.on(\"PUBLIC_KEY\", publicKey => {\n      console.log(\"PUBLIC KEY\");\n      setInfo([publicKey, ecdh.current.getSecretKey(publicKey), true]);\n      addStatus(`Public Key Received : ${publicKey}`);\n    });\n    socket.on(\"USER_DISCONNECTED\", () => {\n      console.log(\"USER DISCONNCTED\");\n      setInfo([\"\", \"\", false]);\n      addStatus(`USER DISCONNECTED`);\n    });\n    socket.on(\"ROOM_FULL\", room => {\n      console.log(\"ROOM FULL\");\n      addStatus(`${room} is FULL!! Please Try another Room`);\n    });\n    socket.on('INTRUSION_ATTEMPT', room => {\n      console.log(\"INTRUSION ATTEMPTED\");\n      addStatus(`Intruder tried to join`);\n    });\n  }, []);\n\n  const joinRoom = roomName => {\n    if (roomName === room) {\n      addStatus(`You are already in ${roomName}`);\n      return;\n    } else {\n      setRoom(roomName);\n      setInfo([\"\", \"\", false]);\n      socket.emit(\"JOIN\", roomName);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"One-to-One-E2EE-Chat-App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: /*#__PURE__*/_jsxDEV(ChatArea, {\n        ecdh: ecdh.current,\n        friendOnline: info[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(JoinRoom, {\n        joinRoom: event => {\n          joinRoom(event);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoArea, {\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UtilsArea, {\n        ecdh: ecdh.current,\n        secretKey: info[1],\n        friendPublicKey: info[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IumAjrisdfj/E+1LUs9aVjZq4uE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/saumya/Projects/Assignment/client/src/App.js"],"names":["ChatArea","InfoArea","UtilsArea","JoinRoom","React","useRef","useEffect","useState","Helmet","socket","ECDH","require","App","console","log","ecdh","room","setRoom","id","info","setInfo","status","setStatus","addStatus","content","STATUS","on","emit","current","getPublicKey","publicKey","getSecretKey","joinRoom","roomName","event"],"mappings":"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","sourcesContent":["import ChatArea from \"./Components/ChatArea/ChatArea\";\nimport InfoArea from \"./Components/InfoArea/InfoArea\";\nimport UtilsArea from \"./Components/UtilsArea/UtilsArea\";\nimport JoinRoom from \"./Components/JoinRoom/JoinRoom\";\nimport React, {useRef, useEffect, useState} from 'react';\nimport { Helmet } from 'react-helmet'\nimport socket from \"./Utils/socket\";\nimport \"./CSS/App.css\";\n\nconst { ECDH } = require(\"./Utils/ECDH\");\n\nfunction App() {\n\n  console.log(\"Rendering.... APP\")\n\n  const ecdh = useRef(new ECDH());\n\n  const [room, setRoom] = useState(socket.id)\n\n  const [info, setInfo] = useState([\"\", \"\", false])\n\n  const [status, setStatus] = useState([])\n\n  const addStatus = (content)=>{\n    setStatus((STATUS)=>[\n        ...STATUS, content\n    ]) \n  }\n\n  // On Mounting\n  useEffect(()=>{\n\n    socket.on(\"NEW_CONNECTION\", ()=>{\n      socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n      addStatus(`Sent your public Key`)\n      addStatus(`NEW USER JOINED`)\n    })\n  \n    socket.on(\"ROOM_JOINED\", (room)=>{\n      addStatus(`SUCCESSFULLY JOINED : ${room}`)\n      addStatus(`Sent your public Key : ${ecdh.current.getPublicKey()}`)\n      socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n    })\n  \n    socket.on(\"PUBLIC_KEY\", (publicKey)=>{\n      console.log(\"PUBLIC KEY\")\n      setInfo([publicKey, ecdh.current.getSecretKey(publicKey), true])\n      addStatus(`Public Key Received : ${publicKey}`)\n    })\n  \n    socket.on(\"USER_DISCONNECTED\", ()=>{\n      console.log(\"USER DISCONNCTED\")\n      setInfo([\"\", \"\", false])\n      addStatus(`USER DISCONNECTED`)\n    })\n  \n    socket.on(\"ROOM_FULL\", (room)=>{\n        console.log(\"ROOM FULL\")\n        addStatus(`${room} is FULL!! Please Try another Room`)\n    })\n  \n    socket.on('INTRUSION_ATTEMPT', (room)=>{\n        console.log(\"INTRUSION ATTEMPTED\")\n        addStatus(`Intruder tried to join`)\n    })\n\n  }, [])\n\n\n  const joinRoom  = (roomName)=>{\n    if(roomName===room){\n      addStatus(`You are already in ${roomName}`)\n      return\n    }\n    else{\n      setRoom(roomName)\n      setInfo([\"\", \"\", false])\n      socket.emit(\"JOIN\", roomName)\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      {/* For Title of Page */}\n      <Helmet>\n          <title>One-to-One-E2EE-Chat-App</title>\n      </Helmet>\n      <div className=\"left\">\n        <ChatArea ecdh={ecdh.current} friendOnline={info[2]}/>\n      </div>  \n      <div className=\"right\">\n        <JoinRoom joinRoom={(event) => {\n            joinRoom(event)\n          }}/>\n        <InfoArea status={status}/>\n        <UtilsArea ecdh={ecdh.current} secretKey={info[1]} friendPublicKey={info[0]}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}