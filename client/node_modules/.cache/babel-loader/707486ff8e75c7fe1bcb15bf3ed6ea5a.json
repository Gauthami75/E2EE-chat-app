{"ast":null,"code":"var _jsxFileName = \"/home/saumya/Projects/Assignment/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport ChatArea from \"./Components/ChatArea/ChatArea\";\nimport InfoArea from \"./Components/InfoArea/InfoArea\";\nimport UtilsArea from \"./Components/UtilsArea/UtilsArea\";\nimport JoinRoom from \"./Components/JoinRoom/JoinRoom\";\nimport React, { useRef, useEffect, useState, useMemo } from 'react';\nimport socket from \"./Utils/socket\";\nimport \"./CSS/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ECDH\n} = require(\"./Utils/ECDH\");\n\nfunction App() {\n  _s();\n\n  console.log(\"Rendering.... APP\");\n  const [room, setRoom] = useState(\"\"); // On Mounting\n\n  useEffect(() => {\n    socket.connect();\n    setRoom(socket.id);\n  }, []);\n  const ecdh = useRef(new ECDH());\n  const [info, setInfo] = useState([\"\", \"\", false]);\n  const [status, setStatus] = useState([]);\n\n  const addStatus = content => {\n    setStatus(STATUS => [...STATUS, content]);\n  };\n\n  socket.on(\"NEW_CONNECTION\", () => {\n    console.log(\"NEW CONNECTION\");\n    socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey()); // addStatus(`Sent your public Key`)\n    // addStatus(`NEW USER JOINED`)\n  });\n  socket.on(\"ROOM_JOINED\", room => {\n    console.log(\"ROOM_JOINED\");\n    console.log(\"AGAIN_ROOM_JOINED\"); // addStatus(`SUCCESSFULLY JOINED : ${room}`)\n    // addStatus(`Sent your public Key : ${ecdh.current.getPublicKey()}`)\n    // socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n  });\n  socket.on(\"PUBLIC_KEY\", publicKey => {\n    console.log(\"PUBLIC KEY\");\n    setInfo([publicKey, ecdh.current.getSecretKey(publicKey), true]); // friendPublicKey.current = publicKey\n    // secretKey.current = ecdh.current.getSecretKey(publicKey)\n    // friendOnline.current = true\n    // console.log(`Secret ${secretKey} Public ${friendPublicKey}`)\n    // addStatus(`Public Key Received : ${publicKey}`)\n  });\n  socket.on(\"USER_DISCONNECTED\", () => {\n    console.log(\"USER DISCONNCTED\"); // setInfo([\"\", \"\", false])\n    // friendPublicKey.current = \"\"\n    // secretKey.current = \"\"\n    // friendOnline.current = false\n    // addStatus(`USER DISCONNECTED`)\n  });\n  socket.on(\"ROOM_FULL\", room => {\n    console.log(\"ROOM FULL\");\n    addStatus(`${room} is FULL!! Please Try another Room`);\n  });\n  socket.on('INTRUSION_ATTEMPT', room => {\n    console.log(\"INTRUSION ATTEMPTED\");\n    addStatus(`Intruder tried to join`);\n  });\n  const joinRoom = useMemo(() => {\n    return roomName => {\n      console.log(\"Room Name :\" + roomName);\n      socket.emit(\"JOIN\", roomName);\n    };\n  }, [roomName]);\n  useMemo(() => {\n    return joinRoom(roomName);\n  }, [roomName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: /*#__PURE__*/_jsxDEV(ChatArea, {\n        ecdh: ecdh.current,\n        friendOnline: info[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(JoinRoom, {\n        joinRoom: event => {\n          setRoom(event);\n          joinRoom(roomName);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoArea, {\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UtilsArea, {\n        ecdh: ecdh.current,\n        secretKey: info[1],\n        friendPublicKey: info[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Kdi3e9xmXC000fpT5xJ7w42DlZU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/saumya/Projects/Assignment/client/src/App.js"],"names":["ChatArea","InfoArea","UtilsArea","JoinRoom","React","useRef","useEffect","useState","useMemo","socket","ECDH","require","App","console","log","room","setRoom","connect","id","ecdh","info","setInfo","status","setStatus","addStatus","content","STATUS","on","emit","current","getPublicKey","publicKey","getSecretKey","joinRoom","roomName","event"],"mappings":"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","sourcesContent":["import ChatArea from \"./Components/ChatArea/ChatArea\";\nimport InfoArea from \"./Components/InfoArea/InfoArea\";\nimport UtilsArea from \"./Components/UtilsArea/UtilsArea\";\nimport JoinRoom from \"./Components/JoinRoom/JoinRoom\";\nimport React, {useRef, useEffect, useState, useMemo} from 'react';\nimport socket from \"./Utils/socket\";\nimport \"./CSS/App.css\";\n\nconst { ECDH } = require(\"./Utils/ECDH\");\n\nfunction App() {\n  \n  console.log(\"Rendering.... APP\")\n\n  const [room, setRoom] = useState(\"\")\n\n  // On Mounting\n  useEffect(()=>{\n    socket.connect()\n    setRoom(socket.id)\n  }, [])\n\n\n  const ecdh = useRef(new ECDH());\n\n  const [info, setInfo] = useState([\"\", \"\", false])\n\n  const [status, setStatus] = useState([])\n\n  const addStatus = (content)=>{\n      setStatus((STATUS)=>[\n          ...STATUS, content\n      ]) \n  }\n\n  socket.on(\"NEW_CONNECTION\", ()=>{\n    console.log(\"NEW CONNECTION\")\n    socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n    // addStatus(`Sent your public Key`)\n    // addStatus(`NEW USER JOINED`)\n  })\n\n  socket.on(\"ROOM_JOINED\", (room)=>{\n    console.log(\"ROOM_JOINED\")\n    console.log(\"AGAIN_ROOM_JOINED\")\n\n    // addStatus(`SUCCESSFULLY JOINED : ${room}`)\n    // addStatus(`Sent your public Key : ${ecdh.current.getPublicKey()}`)\n    // socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n  })\n\n  socket.on(\"PUBLIC_KEY\", (publicKey)=>{\n    console.log(\"PUBLIC KEY\")\n    setInfo([publicKey, ecdh.current.getSecretKey(publicKey), true])\n    // friendPublicKey.current = publicKey\n    // secretKey.current = ecdh.current.getSecretKey(publicKey)\n    // friendOnline.current = true\n    // console.log(`Secret ${secretKey} Public ${friendPublicKey}`)\n    // addStatus(`Public Key Received : ${publicKey}`)\n  })\n\n  socket.on(\"USER_DISCONNECTED\", ()=>{\n    console.log(\"USER DISCONNCTED\")\n    // setInfo([\"\", \"\", false])\n    // friendPublicKey.current = \"\"\n    // secretKey.current = \"\"\n    // friendOnline.current = false\n    \n    // addStatus(`USER DISCONNECTED`)\n  })\n\n  socket.on(\"ROOM_FULL\", (room)=>{\n      console.log(\"ROOM FULL\")\n      addStatus(`${room} is FULL!! Please Try another Room`)\n  })\n\n  socket.on('INTRUSION_ATTEMPT', (room)=>{\n      console.log(\"INTRUSION ATTEMPTED\")\n      addStatus(`Intruder tried to join`)\n  })\n\n\n  const joinRoom  = useMemo(()=>{\n    return (roomName)=>{\n      console.log(\"Room Name :\" + roomName)\n      socket.emit(\"JOIN\", roomName)\n    }\n  }, [roomName])\n\n  useMemo(() => {\n    return joinRoom(roomName)\n  }, [roomName])\n\n  return (\n    <div className=\"container\">\n      <div className=\"left\">\n        <ChatArea ecdh={ecdh.current} friendOnline={info[2]}/>\n      </div>  \n      <div className=\"right\">\n        <JoinRoom joinRoom={(event) => {\n          setRoom(event);\n          joinRoom(roomName);\n        }}/>\n        <InfoArea status={status}/>\n        <UtilsArea ecdh={ecdh.current} secretKey={info[1]} friendPublicKey={info[0]}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}