{"ast":null,"code":"var _jsxFileName = \"/home/saumya/Projects/Assignment/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport ChatArea from \"./Components/ChatArea/ChatArea\";\nimport InfoArea from \"./Components/InfoArea/InfoArea\";\nimport UtilsArea from \"./Components/UtilsArea/UtilsArea\";\nimport JoinRoom from \"./Components/JoinRoom/JoinRoom\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport socket from \"./Utils/socket\";\nimport \"./CSS/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ECDH\n} = require(\"./Utils/ECDH\");\n\nfunction App() {\n  _s();\n\n  console.log(\"Rendering.... APP\");\n  const ecdh = useRef(new ECDH());\n  const [status, setStatus] = useState(); // const addStatus = (content)=>{\n  //   console.log(\"addStatus Function Called\")\n  //   console.log(\"addStatus Function Over\\n\\n\\n\\n\")\n  // }\n\n  socket.on(\"ROOM_JOINED\", room => {\n    console.log(\"ROOM_JOINED\");\n    console.log(\"AGAIN_ROOM_JOINED\");\n    setStatus(`Room Joined Success ${room}`);\n    console.log(\"\\n\\nStatus Inside\");\n    console.log(status);\n    console.log(\"Status Inside\\n\\n\"); // addStatus(`SUCCESSFULLY JOINED : ${room}`)\n    // addStatus(`Sent your public Key : ${ecdh.current.getPublicKey()}`)\n    // socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n  });\n  console.log(\"\\n\\nStatus Outside\");\n  console.log(status);\n  console.log(\"Status  Outside\\n\\n\"); // socket.on(\"ROOM_JOINED_\", (room)=>{\n  //   console.log(\"_NAYA WALA\")\n  //   console.log(\"AGAIN_ROOM_JOINED\")\n  //   setStatus((STATUS)=>[...STATUS, `Room Joined Success ${room}`,])\n  //   console.log(\"\\n\\nStatus Naya Wala\")\n  //   console.log(status)\n  //   console.log(\"Status Naya Wala\\n\\n\")\n  //   // addStatus(`SUCCESSFULLY JOINED : ${room}`)\n  //   // addStatus(`Sent your public Key : ${ecdh.current.getPublicKey()}`)\n  //   // socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n  // })\n\n  const joinRoom = roomName => {\n    console.log(\"Room Name :\" + roomName);\n    socket.emit(\"JOIN\", roomName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: /*#__PURE__*/_jsxDEV(JoinRoom, {\n        joinRoom: event => joinRoom(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4heBdixH5WsqwXlicT7Wm3RAIHc=\");\n\n_c = App;\nexport default App; // const [info, setInfo] = useState([\"\", \"\", false])\n//   const [status, setStatus] = useState([])\n//   const addStatus = (content)=>{\n//     console.log(\"addStatus Function Called\")\n//     setStatus((STATUS)=>[\n//         ...STATUS, content\n//     ]) \n//     console.log(\"addStatus Function Over\\n\\n\\n\\n\")\n//   }\n//   socket.on(\"NEW_CONNECTION\", ()=>{\n//     console.log(\"NEW CONNECTION\")\n//     socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n//     // addStatus(`Sent your public Key`)\n//     // addStatus(`NEW USER JOINED`)\n//   })\n//   socket.on(\"ROOM_JOINED\", (room)=>{\n//     console.log(\"ROOM_JOINED\")\n//     console.log(\"AGAIN_ROOM_JOINED\")\n//     addStatus(`SUCCESSFULLY JOINED : ${room}`)\n//     // addStatus(`Sent your public Key : ${ecdh.current.getPublicKey()}`)\n//     // socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n//   })\n//   socket.on(\"PUBLIC_KEY\", (publicKey)=>{\n//     console.log(\"PUBLIC KEY\")\n//     setInfo([publicKey, ecdh.current.getSecretKey(publicKey), true])\n//     // friendPublicKey.current = publicKey\n//     // secretKey.current = ecdh.current.getSecretKey(publicKey)\n//     // friendOnline.current = true\n//     // console.log(`Secret ${secretKey} Public ${friendPublicKey}`)\n//     // addStatus(`Public Key Received : ${publicKey}`)\n//   })\n//   socket.on(\"USER_DISCONNECTED\", ()=>{\n//     console.log(\"USER DISCONNCTED\")\n//     // setInfo([\"\", \"\", false])\n//     // friendPublicKey.current = \"\"\n//     // secretKey.current = \"\"\n//     // friendOnline.current = false\n//     // addStatus(`USER DISCONNECTED`)\n//   })\n//   socket.on(\"ROOM_FULL\", (room)=>{\n//       console.log(\"ROOM FULL\")\n//       addStatus(`${room} is FULL!! Please Try another Room`)\n//   })\n//   socket.on('INTRUSION_ATTEMPT', (room)=>{\n//       console.log(\"INTRUSION ATTEMPTED\")\n//       addStatus(`Intruder tried to join`)\n//   })\n//   // On Mounting\n//   useEffect(()=>{\n//   }, [])\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/saumya/Projects/Assignment/client/src/App.js"],"names":["ChatArea","InfoArea","UtilsArea","JoinRoom","React","useRef","useEffect","useState","socket","ECDH","require","App","console","log","ecdh","status","setStatus","on","room","joinRoom","roomName","emit","event"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAO,eAAP;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAWC,OAAO,CAAC,cAAD,CAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEbC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,QAAMC,IAAI,GAAGT,MAAM,CAAC,IAAII,IAAJ,EAAD,CAAnB;AAEA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBT,QAAQ,EAApC,CANa,CAQb;AACA;AAEA;AACA;;AAEAC,EAAAA,MAAM,CAACS,EAAP,CAAU,aAAV,EAA0BC,IAAD,IAAQ;AAC/BN,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEAG,IAAAA,SAAS,CAAE,uBAAsBE,IAAK,EAA7B,CAAT;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAP+B,CAS/B;AACA;AACA;AACD,GAZD;AAcAD,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EA9Ba,CAgCb;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,QAAMM,QAAQ,GAAKC,QAAD,IAAY;AAC5BR,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBO,QAA5B;AACAZ,IAAAA,MAAM,CAACa,IAAP,CAAY,MAAZ,EAAoBD,QAApB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAGE,KAAD,IAAWH,QAAQ,CAACG,KAAD;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA/DQX,G;;KAAAA,G;AAiET,eAAeA,GAAf,C,CAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import ChatArea from \"./Components/ChatArea/ChatArea\";\nimport InfoArea from \"./Components/InfoArea/InfoArea\";\nimport UtilsArea from \"./Components/UtilsArea/UtilsArea\";\nimport JoinRoom from \"./Components/JoinRoom/JoinRoom\";\nimport React, {useRef, useEffect, useState} from 'react';\nimport socket from \"./Utils/socket\";\nimport \"./CSS/App.css\";\n\nconst { ECDH } = require(\"./Utils/ECDH\");\n\nfunction App() {\n  \n  console.log(\"Rendering.... APP\")\n\n  const ecdh = useRef(new ECDH());\n\n  const [status, setStatus] = useState()\n\n  // const addStatus = (content)=>{\n  //   console.log(\"addStatus Function Called\")\n     \n  //   console.log(\"addStatus Function Over\\n\\n\\n\\n\")\n  // }\n\n  socket.on(\"ROOM_JOINED\", (room)=>{\n    console.log(\"ROOM_JOINED\")\n    console.log(\"AGAIN_ROOM_JOINED\")\n\n    setStatus(`Room Joined Success ${room}`)\n    console.log(\"\\n\\nStatus Inside\")\n    console.log(status)\n    console.log(\"Status Inside\\n\\n\")\n\n    // addStatus(`SUCCESSFULLY JOINED : ${room}`)\n    // addStatus(`Sent your public Key : ${ecdh.current.getPublicKey()}`)\n    // socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n  })\n\n  console.log(\"\\n\\nStatus Outside\")\n  console.log(status)\n  console.log(\"Status  Outside\\n\\n\")\n\n  // socket.on(\"ROOM_JOINED_\", (room)=>{\n  //   console.log(\"_NAYA WALA\")\n  //   console.log(\"AGAIN_ROOM_JOINED\")\n\n  //   setStatus((STATUS)=>[...STATUS, `Room Joined Success ${room}`,])\n  //   console.log(\"\\n\\nStatus Naya Wala\")\n  //   console.log(status)\n  //   console.log(\"Status Naya Wala\\n\\n\")\n\n  //   // addStatus(`SUCCESSFULLY JOINED : ${room}`)\n  //   // addStatus(`Sent your public Key : ${ecdh.current.getPublicKey()}`)\n  //   // socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n  // })\n\n  const joinRoom  = (roomName)=>{\n    console.log(\"Room Name :\" + roomName)\n    socket.emit(\"JOIN\", roomName)\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"left\">\n        {/* <ChatArea ecdh={ecdh.current} friendOnline={info[2]}/> */}\n      </div>  \n      <div className=\"right\">\n        <JoinRoom joinRoom={(event) => joinRoom(event)}/>\n        {/* <InfoArea status={status}/> */}\n        {/* <UtilsArea ecdh={ecdh.current} secretKey={info[1]} friendPublicKey={info[0]}/> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n// const [info, setInfo] = useState([\"\", \"\", false])\n\n//   const [status, setStatus] = useState([])\n\n//   const addStatus = (content)=>{\n//     console.log(\"addStatus Function Called\")\n//     setStatus((STATUS)=>[\n//         ...STATUS, content\n//     ]) \n//     console.log(\"addStatus Function Over\\n\\n\\n\\n\")\n//   }\n\n//   socket.on(\"NEW_CONNECTION\", ()=>{\n//     console.log(\"NEW CONNECTION\")\n//     socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n//     // addStatus(`Sent your public Key`)\n//     // addStatus(`NEW USER JOINED`)\n//   })\n\n//   socket.on(\"ROOM_JOINED\", (room)=>{\n//     console.log(\"ROOM_JOINED\")\n//     console.log(\"AGAIN_ROOM_JOINED\")\n\n//     addStatus(`SUCCESSFULLY JOINED : ${room}`)\n//     // addStatus(`Sent your public Key : ${ecdh.current.getPublicKey()}`)\n//     // socket.emit(\"PUBLIC_KEY\", ecdh.current.getPublicKey())\n//   })\n\n//   socket.on(\"PUBLIC_KEY\", (publicKey)=>{\n//     console.log(\"PUBLIC KEY\")\n//     setInfo([publicKey, ecdh.current.getSecretKey(publicKey), true])\n//     // friendPublicKey.current = publicKey\n//     // secretKey.current = ecdh.current.getSecretKey(publicKey)\n//     // friendOnline.current = true\n//     // console.log(`Secret ${secretKey} Public ${friendPublicKey}`)\n//     // addStatus(`Public Key Received : ${publicKey}`)\n//   })\n\n//   socket.on(\"USER_DISCONNECTED\", ()=>{\n//     console.log(\"USER DISCONNCTED\")\n//     // setInfo([\"\", \"\", false])\n//     // friendPublicKey.current = \"\"\n//     // secretKey.current = \"\"\n//     // friendOnline.current = false\n    \n//     // addStatus(`USER DISCONNECTED`)\n//   })\n\n//   socket.on(\"ROOM_FULL\", (room)=>{\n//       console.log(\"ROOM FULL\")\n//       addStatus(`${room} is FULL!! Please Try another Room`)\n//   })\n\n//   socket.on('INTRUSION_ATTEMPT', (room)=>{\n//       console.log(\"INTRUSION ATTEMPTED\")\n//       addStatus(`Intruder tried to join`)\n//   })\n\n//   // On Mounting\n//   useEffect(()=>{\n//   }, [])\n"]},"metadata":{},"sourceType":"module"}